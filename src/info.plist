<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.chrismessina.toolkits.brandfetch</string>
	<key>category</key>
	<string>Toolkits</string>
	<key>connections</key>
	<dict>
		<key>09505EB1-8F47-49C3-B45A-CFD3501E79A6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E3392E50-E389-4A35-8CED-9602B97A12B6</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>DFFC62CF-4663-4C00-91D3-1B0CAC7E950C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>09505EB1-8F47-49C3-B45A-CFD3501E79A6</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>622380CA-E209-403B-8F5B-4E556C368737</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>E3392E50-E389-4A35-8CED-9602B97A12B6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>704E08ED-FC06-44DE-9623-7F4C0CBBD799</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Chris Messina</string>
	<key>description</key>
	<string>A handy Alfred Workflow for working with Brandfetch.</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Brandfetch Toolkit</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>11</integer>
				<key>hotmod</key>
				<integer>1835008</integer>
				<key>hotstring</key>
				<string>B</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>DFFC62CF-4663-4C00-91D3-1B0CAC7E950C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>const frontmost_app_name = Application('System Events').applicationProcesses.where({ frontmost: true }).name()[0]
const frontmost_app = Application(frontmost_app_name)

const chromium_variants = ['Google Chrome', 'Chromium', 'Opera', 'Vivaldi', 'Brave Browser', 'Microsoft Edge']
const webkit_variants = ['Safari', 'Webkit']

if (chromium_variants.some(app_name =&gt; frontmost_app_name.startsWith(app_name))) {
	frontmost_app.windows[0].activeTab.url().replace('http://','').replace('https://','').replace('www.','').split(/[/?#]/)[0]
} else if (webkit_variants.some(app_name =&gt; frontmost_app_name.startsWith(app_name))) {
	frontmost_app.documents[0].url().replace('http://','').replace('https://','').replace('www.','').split(/[/?#]/)[0]
} else {
  throw new Error('You need a supported browser as your frontmost app')
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>09505EB1-8F47-49C3-B45A-CFD3501E79A6</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>https://www.brandfetch.io/{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>704E08ED-FC06-44DE-9623-7F4C0CBBD799</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.transform</string>
			<key>uid</key>
			<string>E3392E50-E389-4A35-8CED-9602B97A12B6</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://github.com/chrismessina/alfred-brandfetch-toolkit/blob/main/src/info.plist?raw=true'
readonly workflow_url='https://github.com/chrismessina/alfred-brandfetch-toolkit/blob/main/src/twitter-toolkit.alfredworkflow?raw=true'
readonly download_type='direct'
readonly frequency_check='30'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page‚Ä¶'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing‚Ä¶'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>622380CA-E209-403B-8F5B-4E556C368737</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>The Brandfetch Toolkit for Alfred makes it easy to look up the current browser window's URL using a keyboard shortcut.

üé© You can find my Alfred Themes and Workflows here:

https://github.com/chrismessina

‚òï You can also tip me a coffee or two if you like:

https://ko-fi.com/chris

ü§ôüèª I'm available for product design consulting as well:

https://superpeer.com/chrismessina</string>
	<key>uidata</key>
	<dict>
		<key>09505EB1-8F47-49C3-B45A-CFD3501E79A6</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>622380CA-E209-403B-8F5B-4E556C368737</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>240</integer>
		</dict>
		<key>704E08ED-FC06-44DE-9623-7F4C0CBBD799</key>
		<dict>
			<key>xpos</key>
			<integer>525</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>DFFC62CF-4663-4C00-91D3-1B0CAC7E950C</key>
		<dict>
			<key>xpos</key>
			<integer>55</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>E3392E50-E389-4A35-8CED-9602B97A12B6</key>
		<dict>
			<key>xpos</key>
			<integer>420</integer>
			<key>ypos</key>
			<integer>80</integer>
		</dict>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>0.1</string>
	<key>webaddress</key>
	<string>https://chrismessina.me</string>
</dict>
</plist>
